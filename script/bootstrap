#!/bin/sh
#
# bootstrap installs things.

set -e

cd "$(dirname "$0")/.."
DOTFILES=$(pwd -P)

source bin/link-file
source bin/pretty-log

install_gitconfig () {
  title 'Install gitconfig'

  if ! [ -f git/gitconfig.local.symlink ]
  then
    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential='osxkeychain'
    fi

    user ' - What is your github author name?'
    read -e git_authorname
    user ' - What is your github author email?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.local.symlink.example > git/gitconfig.local.symlink

    success 'Completed gitconfig install'
  fi
}

symlink_dotfiles () {
  title 'Installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES" -maxdepth 2 -name '*.symlink' -not -path '*.git*')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

install_zsh_configs () {
  title 'Installing zsh configs'

  if [[ ! -z "$ZDOTDIR" ]]; then
    local ZDOTDIR_PREV="$ZDOTDIR"
  fi

  source ~/.zshenv

  if [[ -z "$ZDOTDIR" ]]; then
    fail '$ZDOTDIR is not set in .zshenv!'
  elif [[ ! -z "$ZDOTDIR_PREV" && "$ZDOTDIR" != "$ZDOTDIR_PREV" ]]; then
    fail "Previously set ZDOTDIR (${ZDOTDIR_PREV}) was overriden by ZDOTDIR from ~/.zshenv!"
  fi

  mkdir -p "$ZDOTDIR"

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES/zsh/configs" -mindepth 1)
  do
    dst="$ZDOTDIR/.$(basename "$src")"
    link_file "$src" "$dst"
  done

  [[ -n "$(command -v brew)" ]] && zsh_path="$(brew --prefix)/bin/zsh" || zsh_path="$(which zsh)"
  if ! grep "$zsh_path" /etc/shells; then
    info "adding $zsh_path to /etc/shells"
    echo "$zsh_path" | sudo tee -a /etc/shells
  fi

  if [[ "$SHELL" != "$zsh_path" ]]; then
    chsh -s "$zsh_path"
    info "default shell changed to $zsh_path"
  fi
}

run_setup () {
  title "Installing dependencies"
  if source bin/dot | while read -r data; do info "$data"; done
  then
    success "Dependencies installed"
  else
    fail "Error installing dependencies"
  fi
}

#echo ''
install_gitconfig
echo ''
symlink_dotfiles
echo ''
install_zsh_configs
echo ''
run_setup
echo ''
success 'All installed!'
